{"ast":null,"code":"import _regeneratorRuntime from \"/Users/rahul/Desktop/Project/React/clothing-ecommerce-store-using-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/rahul/Desktop/Project/React/clothing-ecommerce-store-using-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/Users/rahul/Desktop/Project/React/clothing-ecommerce-store-using-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rahul/Desktop/Project/React/clothing-ecommerce-store-using-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/rahul/Desktop/Project/React/clothing-ecommerce-store-using-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rahul/Desktop/Project/React/clothing-ecommerce-store-using-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/rahul/Desktop/Project/React/clothing-ecommerce-store-using-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/rahul/Desktop/Project/React/clothing-ecommerce-store-using-react/src/pages/shop/shop.component.jsx\";\nimport React from 'react';\nimport { Route } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { updateCollections as _updateCollections } from '../../redux/shop/shop.actions';\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\n\nvar ShopPage =\n/*#__PURE__*/\nfunction (_React$Component) {\n  _inherits(ShopPage, _React$Component);\n\n  function ShopPage() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ShopPage);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ShopPage)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      loading: true\n    };\n    _this.unsubscribeFromSnapshot = null;\n    return _this;\n  }\n\n  _createClass(ShopPage, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var updateCollections = this.props.updateCollections;\n      var collectionRef = firestore.collection('collection');\n      this.unsubscribeFromSnapshot = collectionRef.onSnapshot(\n      /*#__PURE__*/\n      function () {\n        var _ref = _asyncToGenerator(\n        /*#__PURE__*/\n        _regeneratorRuntime.mark(function _callee(snapshot) {\n          var collectionsMap;\n          return _regeneratorRuntime.wrap(function _callee$(_context) {\n            while (1) {\n              switch (_context.prev = _context.next) {\n                case 0:\n                  collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n                  updateCollections(collectionsMap);\n\n                case 2:\n                case \"end\":\n                  return _context.stop();\n              }\n            }\n          }, _callee, this);\n        }));\n\n        return function (_x) {\n          return _ref.apply(this, arguments);\n        };\n      }());\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var match = this.props.match;\n      return React.createElement(\"div\", {\n        className: \"shop-page\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 32\n        },\n        __self: this\n      }, React.createElement(Route, {\n        exact: true,\n        path: \"\".concat(match.path),\n        component: CollectionsOverview,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 33\n        },\n        __self: this\n      }), React.createElement(Route, {\n        path: \"\".concat(match.path, \"/:collectionId\"),\n        component: CollectionPage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 34\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return ShopPage;\n}(React.Component);\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    updateCollections: function updateCollections(collectionsMap) {\n      return dispatch(_updateCollections(collectionsMap));\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/rahul/Desktop/Project/React/clothing-ecommerce-store-using-react/src/pages/shop/shop.component.jsx"],"names":["React","Route","connect","CollectionsOverview","CollectionPage","firestore","convertCollectionsSnapshotToMap","updateCollections","WithSpinner","ShopPage","state","loading","unsubscribeFromSnapshot","props","collectionRef","collection","onSnapshot","snapshot","collectionsMap","match","path","Component","mapDispatchToProps","dispatch"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,KAAR,QAAoB,kBAApB;AACA,SAAQC,OAAR,QAAsB,aAAtB;AAGA,OAAOC,mBAAP,MAAgC,sEAAhC;AACA,OAAOC,cAAP,MAA2B,oCAA3B;AAEA,SAAQC,SAAR,EAAmBC,+BAAnB,QAAyD,+BAAzD;AAEA,SAAQC,iBAAiB,IAAjBA,kBAAR,QAAgC,+BAAhC;AAEA,OAAOC,WAAP,MAAwB,sDAAxB;;IAEMC,Q;;;;;;;;;;;;;;;;;UACJC,K,GAAQ;AACJC,MAAAA,OAAO,EAAE;AADL,K;UAGRC,uB,GAA0B,I;;;;;;wCACN;AAAA,UACXL,iBADW,GACU,KAAKM,KADf,CACXN,iBADW;AAElB,UAAMO,aAAa,GAAGT,SAAS,CAACU,UAAV,CAAqB,YAArB,CAAtB;AAEA,WAAKH,uBAAL,GAA+BE,aAAa,CAACE,UAAd;AAAA;AAAA;AAAA;AAAA;AAAA,iCAAyB,iBAAMC,QAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAChDC,kBAAAA,cADgD,GAC/BZ,+BAA+B,CAACW,QAAD,CADA;AAEtDV,kBAAAA,iBAAiB,CAACW,cAAD,CAAjB;;AAFsD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAzB;;AAAA;AAAA;AAAA;AAAA,UAA/B;AAID;;;6BACO;AAAA,UACCC,KADD,GACU,KAAKN,KADf,CACCM,KADD;AAEN,aACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACA,oBAAC,KAAD;AAAO,QAAA,KAAK,MAAZ;AAAa,QAAA,IAAI,YAAKA,KAAK,CAACC,IAAX,CAAjB;AAAoC,QAAA,SAAS,EAAEjB,mBAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,EAEA,oBAAC,KAAD;AAAO,QAAA,IAAI,YAAKgB,KAAK,CAACC,IAAX,mBAAX;AAA4C,QAAA,SAAS,EAAEhB,cAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFA,CADJ;AAMD;;;;EAtBoBJ,KAAK,CAACqB,S;;AAyB7B,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ;AAAA,SAAK;AACtChB,IAAAA,iBAAiB,EAAE,2BAAAW,cAAc;AAAA,aAAIK,QAAQ,CAAChB,kBAAiB,CAACW,cAAD,CAAlB,CAAZ;AAAA;AADK,GAAL;AAAA,CAAnC;;AAGA,eAAehB,OAAO,CAAC,IAAD,EAAOoB,kBAAP,CAAP,CAAkCb,QAAlC,CAAf","sourcesContent":["import React from 'react';\nimport {Route} from 'react-router-dom';\nimport {connect} from 'react-redux';\n\n\nimport CollectionsOverview from '../../components/collections-overview/collections-overview.component';\nimport CollectionPage from '../collection/collection.component';\n\nimport {firestore, convertCollectionsSnapshotToMap} from '../../firebase/firebase.utils';\n\nimport {updateCollections} from '../../redux/shop/shop.actions';\n\nimport WithSpinner from '../../components/with-spinner/with-spinner.component';\n\nclass ShopPage extends React.Component {\n  state = {\n      loading: true,\n    }\n  unsubscribeFromSnapshot = null;\n  componentDidMount() {\n    const {updateCollections} = this.props;\n    const collectionRef = firestore.collection('collection');\n\n    this.unsubscribeFromSnapshot = collectionRef.onSnapshot(async snapshot => {\n      const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      updateCollections(collectionsMap);\n    });\n  }\n  render(){\n    const {match} = this.props;\n    return(\n        <div className='shop-page'>\n        <Route exact path={`${match.path}`} component={CollectionsOverview} />\n        <Route path={`${match.path}/:collectionId`} component={CollectionPage} />\n      </div>\n    )\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n})\nexport default connect(null, mapDispatchToProps)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}