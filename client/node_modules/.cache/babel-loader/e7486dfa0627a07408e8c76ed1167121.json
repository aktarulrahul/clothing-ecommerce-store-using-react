{"ast":null,"code":"import _regeneratorRuntime from \"/Users/rahul/Desktop/Project/React/clothing-ecommerce-store-using-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\n\nvar _marked = /*#__PURE__*/_regeneratorRuntime.mark(fetchCollectionsAsync),\n    _marked2 = /*#__PURE__*/_regeneratorRuntime.mark(fetchCollectionsStart);\n\nimport { takeEvery } from 'redux-saga/effects';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\nimport ShopActionTypes from './shop.types';\nexport function fetchCollectionsAsync() {\n  var collectionRef;\n  return _regeneratorRuntime.wrap(function fetchCollectionsAsync$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return console.log('I am fired');\n\n        case 2:\n          collectionRef = firestore.collection('collection');\n          collectionRef.get().then(function (snapshot) {\n            var collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n            dispatch(fetchCollectionsSuccess(collectionsMap));\n          }).catch(function (error) {\n            return dispatch(fetchCollectionsFailure(error.message));\n          });\n\n        case 4:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\nexport function fetchCollectionsStart() {\n  return _regeneratorRuntime.wrap(function fetchCollectionsStart$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeEvery(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollectionsAsync);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}","map":{"version":3,"sources":["/Users/rahul/Desktop/Project/React/clothing-ecommerce-store-using-react/src/redux/shop/shop.sagas.js"],"names":["fetchCollectionsAsync","fetchCollectionsStart","takeEvery","firestore","convertCollectionsSnapshotToMap","fetchCollectionsSuccess","fetchCollectionsFailure","ShopActionTypes","console","log","collectionRef","collection","get","then","snapshot","collectionsMap","dispatch","catch","error","message","FETCH_COLLECTIONS_START"],"mappings":";;oDAWiBA,qB;qDAUAC,qB;;AArBjB,SAAQC,SAAR,QAAwB,oBAAxB;AAEA,SAAQC,SAAR,EAAmBC,+BAAnB,QAAyD,+BAAzD;AAEA,SACAC,uBADA,EAEAC,uBAFA,QAGO,gBAHP;AAKA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,OAAO,SAAUP,qBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACH,iBAAMQ,OAAO,CAACC,GAAR,CAAY,YAAZ,CAAN;;AADG;AAGGC,UAAAA,aAHH,GAGmBP,SAAS,CAACQ,UAAV,CAAqB,YAArB,CAHnB;AAIHD,UAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAAyB,UAAAC,QAAQ,EAAI;AACjC,gBAAMC,cAAc,GAAGX,+BAA+B,CAACU,QAAD,CAAtD;AACAE,YAAAA,QAAQ,CAACX,uBAAuB,CAACU,cAAD,CAAxB,CAAR;AACH,WAHD,EAGGE,KAHH,CAGS,UAAAC,KAAK;AAAA,mBAAIF,QAAQ,CAACV,uBAAuB,CAACY,KAAK,CAACC,OAAP,CAAxB,CAAZ;AAAA,WAHd;;AAJG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAUP,OAAO,SAAUlB,qBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACH,iBAAMC,SAAS,CACXK,eAAe,CAACa,uBADL,EAEXpB,qBAFW,CAAf;;AADG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import {takeEvery} from 'redux-saga/effects';\n\nimport {firestore, convertCollectionsSnapshotToMap} from '../../firebase/firebase.utils';\n\nimport {\nfetchCollectionsSuccess,\nfetchCollectionsFailure\n} from './shop.actions';\n\nimport ShopActionTypes from './shop.types';\n\nexport function* fetchCollectionsAsync(){\n    yield console.log('I am fired');\n\n    const collectionRef = firestore.collection('collection');\n    collectionRef.get().then(snapshot => {\n        const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n        dispatch(fetchCollectionsSuccess(collectionsMap));\n    }).catch(error => dispatch(fetchCollectionsFailure(error.message)))\n}\n\nexport function* fetchCollectionsStart(){\n    yield takeEvery(\n        ShopActionTypes.FETCH_COLLECTIONS_START,\n        fetchCollectionsAsync\n        );\n}\n"]},"metadata":{},"sourceType":"module"}