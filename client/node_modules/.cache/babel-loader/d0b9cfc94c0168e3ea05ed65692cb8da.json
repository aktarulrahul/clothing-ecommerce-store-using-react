{"ast":null,"code":"var _this = this;\n\nimport ShopActionTypes from './shop.types';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nexport var fetchCollectionsStart = function fetchCollectionsStart() {\n  return {\n    type: ShopActionTypes.FETCH_COLLECTIONS_START\n  };\n};\nexport var ffetchCollectionsStartAsync = function ffetchCollectionsStartAsync() {\n  return function (dispatch) {\n    var collectionRef = firestore.collection('collection');\n    dispatch(fetchCollectionsStart());\n    collectionRef.get().then(function (snapshot) {\n      var collectionsMap = convertCollectionsSnapshotToMap(snapshot); //  updateCollections(collectionsMap);\n\n      _this.setState({\n        loading: false\n      });\n    });\n  };\n};","map":{"version":3,"sources":["/Users/rahul/Desktop/Project/React/clothing-ecommerce-store-using-react/src/redux/shop/shop.actions.js"],"names":["ShopActionTypes","firestore","convertCollectionsSnapshotToMap","fetchCollectionsStart","type","FETCH_COLLECTIONS_START","ffetchCollectionsStartAsync","dispatch","collectionRef","collection","get","then","snapshot","collectionsMap","setState","loading"],"mappings":";;AAAA,OAAOA,eAAP,MAA4B,cAA5B;AACA,SAAQC,SAAR,EAAmBC,+BAAnB,QAAyD,+BAAzD;AAEA,OAAO,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB;AAAA,SAAO;AACxCC,IAAAA,IAAI,EAAEJ,eAAe,CAACK;AADkB,GAAP;AAAA,CAA9B;AAIP,OAAO,IAAMC,2BAA2B,GAAG,SAA9BA,2BAA8B,GAAM;AAC7C,SAAO,UAAAC,QAAQ,EAAI;AACf,QAAMC,aAAa,GAAGP,SAAS,CAACQ,UAAV,CAAqB,YAArB,CAAtB;AACAF,IAAAA,QAAQ,CAACJ,qBAAqB,EAAtB,CAAR;AAEAK,IAAAA,aAAa,CAACE,GAAd,GAAoBC,IAApB,CAAyB,UAAAC,QAAQ,EAAI;AACjC,UAAMC,cAAc,GAAGX,+BAA+B,CAACU,QAAD,CAAtD,CADiC,CAErC;;AACI,MAAA,KAAI,CAACE,QAAL,CAAc;AAACC,QAAAA,OAAO,EAAE;AAAV,OAAd;AACP,KAJG;AAKH,GATD;AAUH,CAXM","sourcesContent":["import ShopActionTypes from './shop.types';\nimport {firestore, convertCollectionsSnapshotToMap} from '../../firebase/firebase.utils'\n\nexport const fetchCollectionsStart = () => ({\n    type: ShopActionTypes.FETCH_COLLECTIONS_START\n})\n\nexport const ffetchCollectionsStartAsync = () => {\n    return dispatch => {\n        const collectionRef = firestore.collection('collection');\n        dispatch(fetchCollectionsStart());\n\n        collectionRef.get().then(snapshot => {\n            const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n        //  updateCollections(collectionsMap);\n            this.setState({loading: false});\n    })\n    }\n}\n"]},"metadata":{},"sourceType":"module"}