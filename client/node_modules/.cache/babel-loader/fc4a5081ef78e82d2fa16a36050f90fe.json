{"ast":null,"code":"import _classCallCheck from \"/Users/rahul/Desktop/Project/React/clothing-ecommerce-store-using-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/rahul/Desktop/Project/React/clothing-ecommerce-store-using-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"/Users/rahul/Desktop/Project/React/clothing-ecommerce-store-using-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _possibleConstructorReturn from \"/Users/rahul/Desktop/Project/React/clothing-ecommerce-store-using-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/rahul/Desktop/Project/React/clothing-ecommerce-store-using-react/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nvar _jsxFileName = \"/Users/rahul/Desktop/Project/React/clothing-ecommerce-store-using-react/src/pages/shop/shop.component.jsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Date.prototype.toString.call(Reflect.construct(Date, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { useEffect } from 'react';\nimport { Route } from 'react-router-dom'; // import {createStructuredSelector} from 'reselect';\n\nimport { connect } from 'react-redux'; // import {selectIsCollectionsLoaded} from '../../redux/shop/shop.selectors';\n\nimport CollectionsOverviewContainer from '../../components/collections-overview/collections-overview.container';\nimport CollectionPageContainer from '../collection/collection.container'; // import {fetchCollectionsStartAsync} from '../../redux/shop/shop.actions';\n\nimport { fetchCollectionsStart as _fetchCollectionsStart } from '../../redux/shop/shop.actions'; // import {firestore, convertCollectionsSnapshotToMap} from '../../firebase/firebase.utils';\n// import WithSpinner from '../../components/with-spinner/with-spinner.component';\n// const CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\n// const CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nvar ShopPage = /*#__PURE__*/function (_React$Component) {\n  _inherits(ShopPage, _React$Component);\n\n  var _super = _createSuper(ShopPage);\n\n  function ShopPage() {\n    _classCallCheck(this, ShopPage);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(ShopPage, [{\n    key: \"componentDidMount\",\n    // state = {\n    //     loading: true,\n    //   }\n    // unsubscribeFromSnapshot = null;\n    value: function componentDidMount() {\n      //   const {updateCollections} = this.props;\n      //   const collectionRef = firestore.collection('collection');\n      // // fetch('https://firestore.googleapis.com/v1/projects/clothing-ecommerce-react-c3cf5/databases/(default)/documents/collection')\n      // // .then(response => response.json())\n      // // .then(collections => console.log(collections))\n      // collectionRef.get().then(snapshot => {\n      //     const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n      //     updateCollections(collectionsMap);\n      //     this.setState({loading: false});\n      //   })\n      var fetchCollectionsStart = this.props.fetchCollectionsStart;\n      fetchCollectionsStart();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var match = this.props.match; // const {loading} = this.state;\n\n      return /*#__PURE__*/React.createElement(\"div\", {\n        className: \"shop-page\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 9\n        }\n      }, /*#__PURE__*/React.createElement(Route, {\n        exact: true,\n        path: \"\".concat(match.path) // render={(props) =><CollectionsOverviewWithSpinner isLoading={isCollectionFetching} {...props} />}\n        ,\n        component: CollectionsOverviewContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 9\n        }\n      }), /*#__PURE__*/React.createElement(Route, {\n        path: \"\".concat(match.path, \"/:collectionId\") // render={(props) =><CollectionPageWithSpinner isLoading={!selectIsCollectionsLoaded} {...props} />}\n        ,\n        component: CollectionPageContainer,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return ShopPage;\n}(React.Component); // const mapStateToProps = createStructuredSelector({\n//   // isCollectionFetching: selectIsCollectionFetching,\n//   selectIsCollectionsLoaded: selectIsCollectionsLoaded\n// })\n\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    // updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n    fetchCollectionsStart: function fetchCollectionsStart() {\n      return dispatch(_fetchCollectionsStart());\n    }\n  };\n};\n\nexport default connect(null, mapDispatchToProps)(ShopPage);","map":{"version":3,"sources":["/Users/rahul/Desktop/Project/React/clothing-ecommerce-store-using-react/src/pages/shop/shop.component.jsx"],"names":["React","useEffect","Route","connect","CollectionsOverviewContainer","CollectionPageContainer","fetchCollectionsStart","ShopPage","props","match","path","Component","mapDispatchToProps","dispatch"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,KAAR,QAAoB,kBAApB,C,CACA;;AACA,SAAQC,OAAR,QAAsB,aAAtB,C,CAEA;;AAEA,OAAOC,4BAAP,MAAyC,sEAAzC;AACA,OAAOC,uBAAP,MAAoC,oCAApC,C,CAEA;;AACA,SAAQC,qBAAqB,IAArBA,sBAAR,QAAoC,+BAApC,C,CAEA;AAEA;AACA;AACA;;IAEMC,Q;;;;;;;;;;;;;AACJ;AACA;AACA;AACA;wCACoB;AACpB;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAZoB,UAaZD,qBAbY,GAaa,KAAKE,KAblB,CAaZF,qBAbY;AAcpBA,MAAAA,qBAAqB;AACpB;;;6BACO;AAAA,UACCG,KADD,GACU,KAAKD,KADf,CACCC,KADD,EAEN;;AACA,0BACI;AAAK,QAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACA,oBAAC,KAAD;AACA,QAAA,KAAK,MADL;AAEA,QAAA,IAAI,YAAKA,KAAK,CAACC,IAAX,CAFJ,CAGA;AAHA;AAIA,QAAA,SAAS,EAAEN,4BAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,eAOA,oBAAC,KAAD;AACA,QAAA,IAAI,YAAKK,KAAK,CAACC,IAAX,mBADJ,CAEA;AAFA;AAGA,QAAA,SAAS,EAAEL,uBAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAPA,CADJ;AAeD;;;;EAvCoBL,KAAK,CAACW,S,GA0C7B;AACA;AACA;AACA;;;AAEA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAAC,QAAQ;AAAA,SAAK;AACtC;AACAP,IAAAA,qBAAqB,EAAE;AAAA,aAAMO,QAAQ,CAACP,sBAAqB,EAAtB,CAAd;AAAA;AAFe,GAAL;AAAA,CAAnC;;AAKA,eAAeH,OAAO,CAAC,IAAD,EAAOS,kBAAP,CAAP,CAAkCL,QAAlC,CAAf","sourcesContent":["import React, {useEffect} from 'react';\nimport {Route} from 'react-router-dom';\n// import {createStructuredSelector} from 'reselect';\nimport {connect} from 'react-redux';\n\n// import {selectIsCollectionsLoaded} from '../../redux/shop/shop.selectors';\n\nimport CollectionsOverviewContainer from '../../components/collections-overview/collections-overview.container';\nimport CollectionPageContainer from '../collection/collection.container';\n\n// import {fetchCollectionsStartAsync} from '../../redux/shop/shop.actions';\nimport {fetchCollectionsStart} from '../../redux/shop/shop.actions';\n\n// import {firestore, convertCollectionsSnapshotToMap} from '../../firebase/firebase.utils';\n\n// import WithSpinner from '../../components/with-spinner/with-spinner.component';\n// const CollectionsOverviewWithSpinner = WithSpinner(CollectionsOverview);\n// const CollectionPageWithSpinner = WithSpinner(CollectionPage);\n\nclass ShopPage extends React.Component {\n  // state = {\n  //     loading: true,\n  //   }\n  // unsubscribeFromSnapshot = null;\n  componentDidMount() {\n  //   const {updateCollections} = this.props;\n  //   const collectionRef = firestore.collection('collection');\n\n  // // fetch('https://firestore.googleapis.com/v1/projects/clothing-ecommerce-react-c3cf5/databases/(default)/documents/collection')\n  // // .then(response => response.json())\n  // // .then(collections => console.log(collections))\n\n  // collectionRef.get().then(snapshot => {\n  //     const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n  //     updateCollections(collectionsMap);\n  //     this.setState({loading: false});\n  //   })\n  const { fetchCollectionsStart} = this.props;\n  fetchCollectionsStart();\n  }\n  render(){\n    const {match} = this.props;\n    // const {loading} = this.state;\n    return(\n        <div className='shop-page'>\n        <Route\n        exact\n        path={`${match.path}`}\n        // render={(props) =><CollectionsOverviewWithSpinner isLoading={isCollectionFetching} {...props} />}\n        component={CollectionsOverviewContainer}\n        />\n        <Route\n        path={`${match.path}/:collectionId`}\n        // render={(props) =><CollectionPageWithSpinner isLoading={!selectIsCollectionsLoaded} {...props} />}\n        component={CollectionPageContainer}\n        />\n      </div>\n    )\n  }\n}\n\n// const mapStateToProps = createStructuredSelector({\n//   // isCollectionFetching: selectIsCollectionFetching,\n//   selectIsCollectionsLoaded: selectIsCollectionsLoaded\n// })\n\nconst mapDispatchToProps = dispatch => ({\n  // updateCollections: collectionsMap => dispatch(updateCollections(collectionsMap))\n  fetchCollectionsStart: () => dispatch(fetchCollectionsStart())\n\n})\nexport default connect(null, mapDispatchToProps)(ShopPage);\n"]},"metadata":{},"sourceType":"module"}